name: Build, Push and Deploy - derbyfish-flow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE: farmera/derbyfish-flow
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          MAINNET_AGFARMS_PRIVATE_KEY=${{ secrets.MAINNET_AGFARMS_PRIVATE_KEY }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd /home/mattricks/derbyfish-flow
          git fetch origin
          git reset --hard origin/main

          export IMAGE_TAG=${{ github.sha }}
          echo "Deploying image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"

          docker pull ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

          IMAGE_TAG=$IMAGE_TAG docker-compose -f docker-compose.yml down
          IMAGE_TAG=$IMAGE_TAG docker-compose -f docker-compose.yml up -d --remove-orphans

          docker system prune -f

