name: Build, Push and Deploy - derbyfish-flow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE: farmera/derbyfish-flow
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          MAINNET_AGFARMS_PRIVATE_KEY=${{ secrets.MAINNET_AGFARMS_PRIVATE_KEY }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to server
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
          echo "Starting deployment..."
          echo "Current directory: $(pwd)"
          
          echo "Changing to project directory..."
          cd /home/mattricks/derbyfish-flow
          echo "New directory: $(pwd)"
          
          echo "Fetching latest code..."
          git fetch origin
          echo "Git fetch complete"
          
          echo "Resetting to main branch..."
          git reset --hard origin/main
          echo "Git reset complete"

          echo "Setting image tag..."
          export IMAGE_TAG=${{ github.sha }}
          echo "Image tag set to: $IMAGE_TAG"
          echo "Full image name: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"

          echo "Pulling new Docker image..."
          docker pull ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          echo "Docker pull complete"

          echo "Stopping existing containers..."
          IMAGE_TAG=$IMAGE_TAG docker-compose -f docker-compose.yml down
          echo "Containers stopped"

          echo "Starting new containers..."
          IMAGE_TAG=$IMAGE_TAG docker-compose -f docker-compose.yml up -d --remove-orphans
          echo "New containers started"

          echo "Cleaning up old Docker resources..."
          docker system prune -f
          echo "Cleanup complete"

          echo "Deployment finished successfully"
        EOF

